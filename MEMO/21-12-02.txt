스프링 객체 => 동적객체

얕은복사
참조하는 값 (실제값)만 참조 :: 주소값은 같다.

깊은복사
주소값 까지 가져와서 :: 주소값이 다르다.

스프링은 기본적으로 싱글톤으로 된다.
프로토타입으로 변경해도 싱글톤으로 변환됨.
라이브러리에따라서 왔다갔다거림
(주소를 확인)

주소값도 결과다.

아키타입
=> 영역에 자동으로 범위 지정 => 내장객체

런타임 
컴파일이 실행되는 시점

DAO를 관장하는 어노테이션 => 스트레오타입 (프로토타입안쓴다)

WebApplicatiionContext  구현체 -> 디자인패턴

스프링 부트 =  모바일연동
그라들 = 메이븐을 사용하지않는다

setter메소드의 set을 뺸 나머지 단어의 첫글자가 소문자 인것을 빈으로 인식한다.


op 객체지향프로그래밍언어기법
소멸시키려면 메소드 이용

건바이건 규칙처럼 설명 -> 디자인패턴

ejb

DI 의존성주입 

인터페이스 패턴만들어놓고 빈으로 리스트만들어놓고

문제생기면 그때 새로운 구현체 만들면된다.

**ORM
오브젝트
릴레이션 (관계)- 컬럼
맵핑

DTO쓸필요없다.


힙 :: 이진트리
최대값 =  내가먼저만든주소  
최소값 = 내가 제일마지막에 만든주소

오버플로우 생기는게 찾아가다 문제를생긴것

해시는 배열

여러개 만들면 찾기 힘드니까 만들자마자 소멸
-> 메소드를 사용하는이유
setAttribute 

DI
xml 이라 어노테이션 가능.

웹은 여러번거치기때문에 모든클래스가 빈이다.

클래스 통으로 주입
-> 스캔기법


데이터베이스 연결

빈은 사용자가 많이접근하는클래스

생성자는 클래스를 동작한다

1. 자바출력
2. 빈출력

생성자 주입방식은 DAO에 사용


appServlet 폴더의
servlet-context.xml -> DTO 관련빈설정
root-context.xml -> DAO 관련빈설정

IoC :: 중첩클래스를 안쓴 클래스
분리 하면 IoC 한클래스에서 클래스 여러개이면??


프로퍼티 , 멤버변수 , 인스턴스 멤버변수

프로퍼티 :: 자바빈규약을 통한 형태

바이트 데이터를 변경없이 보내는것이 직렬화.
직렬화가 내장되있는 것이 String

웹은 모든 데이터가 문자열이다.

VO는 읽기기능만 가능

DTO 읽기 수정 가능.

자바의 클래스 형태 구조
접근제한자
글래스의 메소드 자바 p242 ~ p252
메소드 , 가변인자

AQueryTool.com
