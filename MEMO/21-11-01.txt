모델 1 -> 여러개의 페이지로 넘겨준다 -> php , asp ( 데이터를 받는기능  , 보내는기능이 합쳐져있음 ) (모델쪽으로 보내주는)
-> 다양한 기능의 구현이 힘듬 -> 라이브러리 사용하기 어렵다.

모델 2 -> 한개의 페이지로 넘겨준다.
->프레임워크 -> mvc 패턴

데이터를 보여주는 기능 = 프론트엔드 => SM
데이터를 받는, 보내는 , 보여주는 모두포함 => SI

데이터 받기 보내기 -> 서블릿
데이터 보여주기 -> JSP

JSP의 태그방식 JSTL

레퍼런스보고 찾아가야한다.

meta-inf :: 커넥션 풀을 xml로 세팅한다.

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%> 서버페이지의 영역


자바 코드 src에 넣으면 build에 들어감.
실제적인 bulid는 WEB-INF에 들어가 있다


jsp도 서블릿 
web.xml을 통하지 않고서는 WAS가 동작하지 않는다

스프링에서 자바의 new 키워드를 사용하지않고 의존성을 주입한다. ((코어자바))

스프링 라이브러리에서 사용하는 인스턴스는 new로 생성한다.

asp 와 jsp 는 문법이 비슷
<% %>

php
<? ?>

인코딩은 외부이름도 포함됨.